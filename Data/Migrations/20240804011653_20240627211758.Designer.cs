// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repleet.Data;

#nullable disable

namespace Repleet.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240804011653_20240627211758")]
    partial class _20240627211758
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Repleet.Models.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int>("CurrentSkill")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProblemSetId")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.HasIndex("ProblemSetId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("Repleet.Models.Entities.Problem", b =>
                {
                    b.Property<int>("ProblemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProblemId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CompletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Difficulty")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProblemId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Problems");
                });

            modelBuilder.Entity("Repleet.Models.Entities.ProblemSet", b =>
                {
                    b.Property<int>("ProblemSetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProblemSetId"));

                    b.HasKey("ProblemSetId");

                    b.ToTable("ProblemSets");
                });

            modelBuilder.Entity("Repleet.Models.Entities.Category", b =>
                {
                    b.HasOne("Repleet.Models.Entities.ProblemSet", null)
                        .WithMany("Categories")
                        .HasForeignKey("ProblemSetId");
                });

            modelBuilder.Entity("Repleet.Models.Entities.Problem", b =>
                {
                    b.HasOne("Repleet.Models.Entities.Category", "Category")
                        .WithMany("Problems")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Repleet.Models.Entities.Category", b =>
                {
                    b.Navigation("Problems");
                });

            modelBuilder.Entity("Repleet.Models.Entities.ProblemSet", b =>
                {
                    b.Navigation("Categories");
                });
#pragma warning restore 612, 618
        }
    }
}
